!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=27)}([function(e,n,t){"use strict";var r=t(1),a=Object.prototype.toString;function i(e){return"[object Array]"===a.call(e)}function o(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function c(e){return"[object Function]"===a.call(e)}function d(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var t=0,r=e.length;t<r;t++)n.call(null,e[t],t,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.call(null,e[a],a,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!o(e)&&null!==e.constructor&&!o(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isUndefined:o,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:d,merge:function e(){var n={};function t(t,r){"object"==typeof n[r]&&"object"==typeof t?n[r]=e(n[r],t):n[r]=t}for(var r=0,a=arguments.length;r<a;r++)d(arguments[r],t);return n},deepMerge:function e(){var n={};function t(t,r){"object"==typeof n[r]&&"object"==typeof t?n[r]=e(n[r],t):n[r]="object"==typeof t?e({},t):t}for(var r=0,a=arguments.length;r<a;r++)d(arguments[r],t);return n},extend:function(e,n,t){return d(n,(function(n,a){e[a]=t&&"function"==typeof n?r(n,t):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,n,t){"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),r=0;r<t.length;r++)t[r]=arguments[r];return e.apply(n,t)}}},function(e,n,t){"use strict";var r=t(0);function a(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var i;if(t)i=t(n);else if(r.isURLSearchParams(n))i=n.toString();else{var o=[];r.forEach(n,(function(e,n){null!=e&&(r.isArray(e)?n+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),o.push(a(n)+"="+a(e))})))})),i=o.join("&")}if(i){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,n,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,n,t){"use strict";(function(n){var r=t(0),a=t(16),i={"Content-Type":"application/x-www-form-urlencoded"};function o(e,n){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var s,c={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==n&&"[object process]"===Object.prototype.toString.call(n))&&(s=t(5)),s),transformRequest:[function(e,n){return a(n,"Accept"),a(n,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(o(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(o(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){c.headers[e]=r.merge(i)})),e.exports=c}).call(this,t(15))},function(e,n,t){"use strict";var r=t(0),a=t(17),i=t(2),o=t(19),s=t(22),c=t(23),d=t(6);e.exports=function(e){return new Promise((function(n,l){var u=e.data,p=e.headers;r.isFormData(u)&&delete p["Content-Type"];var m=new XMLHttpRequest;if(e.auth){var f=e.auth.username||"",h=e.auth.password||"";p.Authorization="Basic "+btoa(f+":"+h)}var v=o(e.baseURL,e.url);if(m.open(e.method.toUpperCase(),i(v,e.params,e.paramsSerializer),!0),m.timeout=e.timeout,m.onreadystatechange=function(){if(m&&4===m.readyState&&(0!==m.status||m.responseURL&&0===m.responseURL.indexOf("file:"))){var t="getAllResponseHeaders"in m?s(m.getAllResponseHeaders()):null,r={data:e.responseType&&"text"!==e.responseType?m.response:m.responseText,status:m.status,statusText:m.statusText,headers:t,config:e,request:m};a(n,l,r),m=null}},m.onabort=function(){m&&(l(d("Request aborted",e,"ECONNABORTED",m)),m=null)},m.onerror=function(){l(d("Network Error",e,null,m)),m=null},m.ontimeout=function(){var n="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(n=e.timeoutErrorMessage),l(d(n,e,"ECONNABORTED",m)),m=null},r.isStandardBrowserEnv()){var y=t(24),g=(e.withCredentials||c(v))&&e.xsrfCookieName?y.read(e.xsrfCookieName):void 0;g&&(p[e.xsrfHeaderName]=g)}if("setRequestHeader"in m&&r.forEach(p,(function(e,n){void 0===u&&"content-type"===n.toLowerCase()?delete p[n]:m.setRequestHeader(n,e)})),r.isUndefined(e.withCredentials)||(m.withCredentials=!!e.withCredentials),e.responseType)try{m.responseType=e.responseType}catch(n){if("json"!==e.responseType)throw n}"function"==typeof e.onDownloadProgress&&m.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&m.upload&&m.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){m&&(m.abort(),l(e),m=null)})),void 0===u&&(u=null),m.send(u)}))}},function(e,n,t){"use strict";var r=t(18);e.exports=function(e,n,t,a,i){var o=new Error(e);return r(o,n,t,a,i)}},function(e,n,t){"use strict";var r=t(0);e.exports=function(e,n){n=n||{};var t={},a=["url","method","params","data"],i=["headers","auth","proxy"],o=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];r.forEach(a,(function(e){void 0!==n[e]&&(t[e]=n[e])})),r.forEach(i,(function(a){r.isObject(n[a])?t[a]=r.deepMerge(e[a],n[a]):void 0!==n[a]?t[a]=n[a]:r.isObject(e[a])?t[a]=r.deepMerge(e[a]):void 0!==e[a]&&(t[a]=e[a])})),r.forEach(o,(function(r){void 0!==n[r]?t[r]=n[r]:void 0!==e[r]&&(t[r]=e[r])}));var s=a.concat(i).concat(o),c=Object.keys(n).filter((function(e){return-1===s.indexOf(e)}));return r.forEach(c,(function(r){void 0!==n[r]?t[r]=n[r]:void 0!==e[r]&&(t[r]=e[r])})),t}},function(e,n,t){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,n,t){e.exports=t(10)},function(e,n,t){"use strict";var r=t(0),a=t(1),i=t(11),o=t(7);function s(e){var n=new i(e),t=a(i.prototype.request,n);return r.extend(t,i.prototype,n),r.extend(t,n),t}var c=s(t(4));c.Axios=i,c.create=function(e){return s(o(c.defaults,e))},c.Cancel=t(8),c.CancelToken=t(25),c.isCancel=t(3),c.all=function(e){return Promise.all(e)},c.spread=t(26),e.exports=c,e.exports.default=c},function(e,n,t){"use strict";var r=t(0),a=t(2),i=t(12),o=t(13),s=t(7);function c(e){this.defaults=e,this.interceptors={request:new i,response:new i}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var n=[o,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){n.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){n.push(e.fulfilled,e.rejected)}));n.length;)t=t.then(n.shift(),n.shift());return t},c.prototype.getUri=function(e){return e=s(this.defaults,e),a(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(n,t){return this.request(r.merge(t||{},{method:e,url:n}))}})),r.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(n,t,a){return this.request(r.merge(a||{},{method:e,url:n,data:t}))}})),e.exports=c},function(e,n,t){"use strict";var r=t(0);function a(){this.handlers=[]}a.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){r.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=a},function(e,n,t){"use strict";var r=t(0),a=t(14),i=t(3),o=t(4);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||o.adapter)(e).then((function(n){return s(e),n.data=a(n.data,n.headers,e.transformResponse),n}),(function(n){return i(n)||(s(e),n&&n.response&&(n.response.data=a(n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},function(e,n,t){"use strict";var r=t(0);e.exports=function(e,n,t){return r.forEach(t,(function(t){e=t(e,n)})),e}},function(e,n){var t,r,a=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var c,d=[],l=!1,u=-1;function p(){l&&c&&(l=!1,c.length?d=c.concat(d):u=-1,d.length&&m())}function m(){if(!l){var e=s(p);l=!0;for(var n=d.length;n;){for(c=d,d=[];++u<n;)c&&c[u].run();u=-1,n=d.length}c=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(n){try{return r.call(null,e)}catch(n){return r.call(this,e)}}}(e)}}function f(e,n){this.fun=e,this.array=n}function h(){}a.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];d.push(new f(e,n)),1!==d.length||l||s(m)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=h,a.addListener=h,a.once=h,a.off=h,a.removeListener=h,a.removeAllListeners=h,a.emit=h,a.prependListener=h,a.prependOnceListener=h,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,n,t){"use strict";var r=t(0);e.exports=function(e,n){r.forEach(e,(function(t,r){r!==n&&r.toUpperCase()===n.toUpperCase()&&(e[n]=t,delete e[r])}))}},function(e,n,t){"use strict";var r=t(6);e.exports=function(e,n,t){var a=t.config.validateStatus;!a||a(t.status)?e(t):n(r("Request failed with status code "+t.status,t.config,null,t.request,t))}},function(e,n,t){"use strict";e.exports=function(e,n,t,r,a){return e.config=n,t&&(e.code=t),e.request=r,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,n,t){"use strict";var r=t(20),a=t(21);e.exports=function(e,n){return e&&!r(n)?a(e,n):n}},function(e,n,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,n,t){"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},function(e,n,t){"use strict";var r=t(0),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,t,i,o={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),n=r.trim(e.substr(0,i)).toLowerCase(),t=r.trim(e.substr(i+1)),n){if(o[n]&&a.indexOf(n)>=0)return;o[n]="set-cookie"===n?(o[n]?o[n]:[]).concat([t]):o[n]?o[n]+", "+t:t}})),o):o}},function(e,n,t){"use strict";var r=t(0);e.exports=r.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function a(e){var r=e;return n&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=a(window.location.href),function(n){var t=r.isString(n)?a(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},function(e,n,t){"use strict";var r=t(0);e.exports=r.isStandardBrowserEnv()?{write:function(e,n,t,a,i,o){var s=[];s.push(e+"="+encodeURIComponent(n)),r.isNumber(t)&&s.push("expires="+new Date(t).toGMTString()),r.isString(a)&&s.push("path="+a),r.isString(i)&&s.push("domain="+i),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,n,t){"use strict";var r=t(8);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var t=this;e((function(e){t.reason||(t.reason=new r(e),n(t.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(n){e=n})),cancel:e}},e.exports=a},function(e,n,t){"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},function(e,n,t){"use strict";t.r(n);var r=t(9),a=t.n(r);const i=document.location.href.startsWith("http://localhost")?"http://localhost:5000":"",o=()=>localStorage.getItem("userInfo")?JSON.parse(localStorage.getItem("userInfo")):{name:"",email:"",password:""},s=({_id:e="",name:n="",email:t="",password:r="",isAdmin:a=!1,token:i=""})=>{localStorage.setItem("userInfo",JSON.stringify({_id:e,name:n,email:t,password:r,isAdmin:a,token:i}))},c=()=>localStorage.getItem("cartItems")?JSON.parse(localStorage.getItem("cartItems")):[],d=e=>{localStorage.setItem("cartItems",JSON.stringify(e))},l=()=>localStorage.getItem("shipping")?JSON.parse(localStorage.getItem("shipping")):{city:"",country:"",address:"",postalCode:""},u=async({searchKeyword:e=""})=>{try{let n="?";e&&(n+=`searchKeyword=${e}&`);const t={url:`${i}/api/products${n}`,method:"GET",headers:{"Content-Type":"application/json"}},r=await a()(t);if("OK"!==r.statusText)throw new Error(r.data.message);return r.data}catch(e){return console.log("Error in get products",e),{error:e.message}}},p=async e=>{const n={method:"GET",headers:{"Content-Type":"application/json"}};try{const t=await fetch(`${i}/api/products/${e}`,n),r=await t.json();if(200!==t.status)throw new Error(r.message);return r}catch(e){return console.log("Error in get product",e),{error:e.message}}},m=()=>{const e=document.location.hash.slice(1).split("?")[0],n=2===document.location.hash.slice(1).split("?").length?document.location.hash.slice(1).split("?")[1]:"",t=(e.toLowerCase()||"/").split("/"),r=n.split("=");return{resource:t[1],id:t[2],verb:t[3],name:r[0],value:r[1]}},f=async(e,n="content")=>{document.getElementById(n+"_container").innerHTML=await e.render(),await e.after_render()},h=()=>{localStorage.getItem("cartItems")?document.location.hash="/shipping":document.location.hash="/"},v=()=>!!o().email,y=()=>{document.getElementById("loading-overlay").classList.add("active")},g=()=>{document.getElementById("loading-overlay").classList.remove("active")},b=(e,n)=>{document.getElementById("message-overlay").innerHTML=`<div>\n        <div id="message-overlay-content">${e}</div>\n        <button id="message-overlay-close-button">OK</button>\n      </div>`,document.getElementById("message-overlay").classList.add("active"),document.getElementById("message-overlay-close-button").addEventListener("click",()=>{document.getElementById("message-overlay").classList.remove("active"),n&&n()})};var w={render:e=>e.value?`\n<div class="rating">\n  <span>\n    <i class="${e.value>=1?"fa fa-star":"fa fa-star-o"}"  ></i>\n  </span>\n<span>\n  <i\n    class="${e.value>=2?"fa fa-star":e.value>=1.5?"fa fa-star-half-o":"fa fa-star-o"}"\n  ></i>\n</span>\n<span>\n  <i\n    class="${e.value>=3?"fa fa-star":e.value>=2.5?"fa fa-star-half-o":"fa fa-star-o"}"\n  ></i>\n</span>\n<span>\n  <i\n    class="${e.value>=4?"fa fa-star":e.value>=3.5?"fa fa-star-half-o":"fa fa-star-o"}"\n  ></i>\n</span>\n<span>\n  <i\n    class="${e.value>=5?"fa fa-star":e.value>=4.5?"fa fa-star-half-o":"fa fa-star-o"}"\n  ></i>\n</span>\n<span>${e.text||""}</span>\n</div>`:"<div></div>"};const E=(e,n=!1)=>{let t=c();const r=t.find(n=>n.product===e.product);r?n&&(t=t.map(n=>n.product===r.product?e:n)):t=[...t,e],d(t),n&&f($)},$={after_render:async()=>{const e=document.getElementsByClassName("qty-select");Array.from(e).forEach(e=>{e.addEventListener("change",n=>{const t=c().find(n=>n.product===e.id);E({...t,qty:Number(n.target.value)},!0)})});const n=document.getElementsByClassName("delete-button");Array.from(n).forEach(e=>{e.addEventListener("click",()=>{var n;n=e.id,d(c().filter(e=>e.product!==n)),n===m().id?document.location.hash="/cart":f($)})});document.getElementById("checkout-button").addEventListener("click",()=>{document.location.hash="/signin"})},render:async()=>{const e=m();if(e.id){const n=await p(e.id);E({product:n._id,name:n.name,image:n.image,price:n.price,countInStock:n.countInStock,qty:1})}const n=c();return`\n    <div class="cart">\n      <div class="cart-list">\n        <ul class="cart-list-container">\n          <li>\n            <h3> Shopping Cart </h3>\n            <div>\n            Price\n            </div>\n        </li>\n        ${0===n.length?'<div>Cart is empty. <a href="/#/">Go Shopping</a></div>':n.map(e=>`\n                <li>\n                  <div class="cart-image">\n                    <img src="${e.image}" alt="${e.name}" />\n                  </div>\n                  <div class="cart-name">\n                    <div>\n                      <a href="${"/#/product/"+e.product}">${e.name}</a>\n                    </div>\n                    <div>\n                        Qty:\n                      <select  class="qty-select"\n                      value="${e.qty}"\n                      id="${e.product}">\n                      ${[...Array(e.countInStock).keys()].map(n=>e.qty===n+1?`<option value="${n+1}" selected  >${n+1}</option>`:`<option value="${n+1}"  >${n+1}</option>`)}\n                    </select>                       \n                      <button\n                        type="button"\n                        class="delete-button"\n                        id="${e.product}"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                  <div class="cart-price">$${e.price}</div>\n                </li>`).join("\n")}\n      </ul>\n    </div>\n    <div class="cart-action">\n      <h3>\n        Subtotal (${n.reduce((e,n)=>e+n.qty,0)} items)\n        :\n         $${n.reduce((e,n)=>e+n.price*n.qty,0)}\n      </h3>\n      <button id="checkout-button" class="primary fw" >\n        Proceed to Checkout\n      </button>\n    </div>\n  </div>\n  `}};var I={render:async()=>'\n            <section class="section">\n                <h1> 404 Error </h1>\n            </section>\n        ',after_render:async()=>{}};const S={after_render:async()=>{const e=m();document.getElementById("add-button").addEventListener("click",()=>{document.location.hash="/cart/"+e.id}),document.getElementById("review-form")&&document.getElementById("review-form").addEventListener("submit",async n=>{n.preventDefault(),y();const t=await(async(e,n)=>{const{token:t}=o(),r={method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+t},body:JSON.stringify(n)};try{const n=await fetch(`${i}/api/products/${e}/reviews`,r),t=await n.json();if(201!==n.status)throw new Error(t.message);return t}catch(e){return console.log("Error in create review",e.message),{error:e.message}}})(e.id,{comment:document.getElementById("comment").value,rating:document.getElementById("rating").value});g(),t.error?b(t.error):b("Review Added Successfully",()=>{f(S)})})},render:async()=>{const e=m(),n=await p(e.id),t=o();return`\n    <div>\n      <div class="back-to-result">\n        <a href="/#">Back to result</a>\n      </div>\n      <div class="details">\n           <div class="details-image">\n              <img src="${n.image}" alt="product" />\n           </div>\n           <div class="details-info">\n              <ul>\n                <li>\n                  <h1>${n.name}</h1>\n                </li>\n                <li>\n                ${w.render({value:n.rating,text:n.numReviews+" reviews"})}\n                </li>\n                <li>\n                  Price: <b>$${n.price}</b>\n                </li>\n                <li>\n                  Description:\n                  <div>\n                    ${n.description}\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <div class="details-action">\n              <ul>\n                <li>\n                  Price: ${n.price}\n                </li>\n                <li>\n                  Status:  \n                   ${n.countInStock>0?"In Stock":"Unavailable."}\n                </li>              \n                <li>\n                <button\n                id="add-button"\n                class="primary"\n                >\n                Add to Cart\n                </button>\n                </li>\n              </ul>\n            </div>\n            \n          </div>\n          <div> \n            <h2>Reviews</h2>\n            ${0===n.reviews.length?"<div>There is no review.</div>":""}\n            <ul class="review">\n              ${n.reviews.map(e=>`<li>\n                    <div><b>${e.name}</b></div>\n                    <div class="rating-container">\n                    ${w.render({value:e.rating})}\n                      <div>\n                      ${e.createdAt.substring(0,10)}\n                      </div>\n                    </div>\n                    <div>\n                    ${e.comment}\n                    </div>\n                  </li>`).join("\n")}\n              <li>\n                <h3>Write a customer reviews</h3>\n\n                ${t.name?'<form id="review-form">\n                      <ul class="form-container">\n                        <li>\n                          <label for="rating">Rating</label>\n                          <select required name="rating" id="rating">\n                            <option value="">Select</option>\n                            <option value="1">1 = Poor</option>\n                            <option value="2">2 = Fair</option>\n                            <option value="3">3 = Good</option>\n                            <option value="4">4 = Very Good</option>\n                            <option value="5">5 = Excellent</option>\n                          </select>\n                        </li>\n                        <li>\n                          <label for="comment">Comment</label>\n                          <textarea required  name="comment" id="comment" ></textarea>\n                        </li>\n                        <li>\n                          <button type="submit" class="primary">Submit</button>\n                        </li>\n                      </ul>\n                    </form>':' <div>\n                      Please <a href="/#/signin">Signin</a> to write a review.\n                    </div>'}\n              </li>\n            </ul> \n          </div>\n        `}};var T={render:async()=>{const{value:e}=m();return` \n      <div class="brand">\n        <button id="aside-open-button">\n          &#9776;\n        </button>\n        <a href="/#/" >amazona</a>\n      </div>\n      <div class="search">\n        <form class="search-form"  id="search-form">\n          <input type="text" name="q" id="q" value="${e||""}" /> \n          <button type="submit"><i class="fa fa-search"></i></button>\n        </form>        \n      </div>\n      <div id="header-links" class="header-links">\n        <a href="/#/signin">Sign-In</a>\n        <a href="/#/cart">Cart</a>\n      </div> \n        `},after_render:async()=>{const{name:e,isAdmin:n}=o();e&&(document.getElementById("header-links").innerHTML=n?`\n        <a href="/#/profile">${e}</a>\n        <a href="/#/cart">Cart</a>       \n        <div class="dropdown">\n          <a href="/#">Admin</a>\n          <ul class="dropdown-content">\n          <li>  \n            <a href="/#/productlist">Products</a>\n          </li>\n          <li> \n            <a href="/#/orderlist">Orders</a> \n          </li>\n          </ul>\n        </div>`:`\n        <a href="/#/profile">${e}</a>\n        <a href="/#/cart">Cart</a>`),document.getElementById("search-form").addEventListener("submit",async e=>{e.preventDefault();const n=document.getElementById("q").value;document.location.hash="/?q="+n}),document.getElementById("aside-open-button").addEventListener("click",async()=>{document.getElementById("aside_container").classList.add("open")})}};var B={render:async()=>"<div>All rights reserved @2020 </div>",after_render:async()=>{}};var x={render:e=>`<div class="checkout-steps">\n      <div class="${e.step1?"active":""}">Signin</div>\n      <div class="${e.step2?"active":""}">Shipping</div>\n      <div class="${e.step3?"active":""}">Payment</div>\n      <div class="${e.step4?"active":""}">Place Order</div>\n    </div>`};const C=()=>{const e=c();0===e.length&&(document.location.hash="/cart");const n=l();n.address||(document.location.hash="/shipping");const t=localStorage.getItem("payment")?JSON.parse(localStorage.getItem("payment")):{paymentMethod:"paypal"};t.paymentMethod||(document.location.hash="/payment");const r=e.reduce((e,n)=>e+n.price*n.qty,0),a=r>100?0:10,i=Math.round(.15*r*100)/100;return{shipping:n,payment:t,orderItems:e,itemsPrice:r,shippingPrice:a,taxPrice:i,totalPrice:r+a+i}},P=async()=>{const e=C();y();const n=await(async e=>{const{token:n}=o(),t={method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n},body:JSON.stringify(e)};try{const e=await fetch(i+"/api/orders",t),n=await e.json();if(201!==e.status)throw new Error(n.message);return n}catch(e){return console.log("Error in create order",e.message),{error:e.message}}})(e);g(),n.error?y(n.error):(localStorage.removeItem("cartItems"),document.location.hash="/order/"+n.data._id)};let A=null;const j=async()=>{const e=await(async()=>{const e={method:"GET",headers:{"Content-Type":"application/json"}};try{const n=await fetch(i+"/api/paypal/clientId",e),t=await n.json();if(200!==n.status)throw new Error(t.message);return t.clientId}catch(e){return console.log("Error in get client id",e),{error:e.message}}})();if(y(),window.paypal)k(e);else{const n=document.createElement("script");n.type="text/javascript",n.src="https://www.paypalobjects.com/api/checkout.js",n.async=!0,n.onload=()=>k(e),document.body.appendChild(n)}},k=e=>{window.paypal.Button.render({env:"sandbox",client:{sandbox:e,production:""},locale:"en_US",style:{size:"responsive",color:"gold",shape:"pill"},commit:!0,payment:(e,n)=>n.payment.create({transactions:[{amount:{total:A.totalPrice,currency:"USD"}}]}),onAuthorize:(e,n)=>n.payment.execute().then(async()=>{y(),await(async(e,n)=>{const{token:t}=o(),r={method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+t},body:JSON.stringify(n)};try{const n=await fetch(`${i}/api/orders/${e}/pay`,r),t=await n.json();if(200!==n.status)throw new Error(t.message);return t}catch(e){return console.log("Error in pay order",e.message),{error:e.message}}})(A._id,{orderID:e.orderId,payerID:e.payerID,paymentID:e.paymentID}),g(),b("Payment Was Successfully.",()=>{f(O)})})},"#paypal-button").then(()=>{g()})},O={after_render:async()=>{A.isPaid||j(),document.getElementById("deliver-order-button")&&document.getElementById("deliver-order-button").addEventListener("click",async()=>{await(async e=>{const{token:n}=o(),t={method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n}};try{const n=await fetch(`${i}/api/orders/${e}/deliver`,t),r=await n.json();if(200!==n.status)throw new Error(r.message);return r}catch(e){return console.log("Error in deliver order",e.message),{error:e.message}}})(A._id),b("Order Delivered."),f(O)})},render:async()=>{const e=m();A=await(async e=>{const{token:n}=o(),t={method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n}};try{const n=await fetch(`${i}/api/orders/${e}`,t),r=await n.json();if(200!==n.status)throw new Error(r.message);return r}catch(e){return console.log("Error in get order",e),{error:e.message}}})(e.id);const{isAdmin:n}=o();return`\n      <div>\n        <div class="placeorder">\n          <div class="placeorder-info">\n            <div>\n              <h3>Shipping</h3>\n              <p>\n                ${A.shipping.address}, ${A.shipping.city},\n                ${A.shipping.postalCode}, ${A.shipping.country},\n              </p>\n              <p>\n                ${A.isDelivered?"Delivered at "+A.deliveredAt:"Not Delivered."}\n              </p>\n            </div>\n            <div>\n              <h3>Payment</h3>\n              <p>Payment Method: ${A.payment.paymentMethod}</p>\n              <p>\n                ${A.isPaid?"Paid at "+A.paidAt:"Not Paid."}\n              </p>\n            </div>\n            <div>\n              <ul class="cart-list-container">\n                <li>\n                  <h3>Shopping Cart</h3>\n                  <div>Price</div>\n                </li>\n                ${0===A.orderItems.length?"<div>Cart is empty</div>":A.orderItems.map(e=>`<li key={item._id}>\n                          <div class="cart-image">\n                          <img src="${e.image}" alt="${e.name}" />\n                          </div>\n                          <div class="cart-name">\n                            <div>\n                              <a href="/#/product/${e.product}">\n                                ${e.name}\n                              </a>\n                            </div>\n                            <div>Qty: ${e.qty}</div>\n                          </div>\n                          <div class="cart-price">$${e.price}</div>\n                        </li>`)}\n              </ul>\n            </div>\n          </div>\n          <div class="placeorder-action">\n            <ul>\n              <li>\n                <h3>Order Summary</h3>\n              </li>\n              <li>\n                <div>Items</div>\n                <div>$${A.itemsPrice}</div>\n              </li>\n              <li>\n                <div>Shipping</div>\n                <div>$${A.shippingPrice}</div>\n              </li>\n              <li>\n                <div>Tax</div>\n                <div>$${A.taxPrice}</div>\n              </li>\n              <li class="total">\n                <div>Order Total</div>\n                <div>$${A.totalPrice}</div>\n              </li> \n              <li class="placeorder-actions-payment">\n                ${A.isPaid?"":'<div id="paypal-button"></div>'}\n              </li>\n              <li  >\n                ${A.isPaid&&!A.isDelivered&&n?'<button id="deliver-order-button" class="primary fw">Deliver Order</button>':""}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>`}};var L={render:async()=>'\n   <div class="aside-header">\n    <div>SHOP BY CATEGORY</div>\n    <button class="aside-close-button" id="aside-close-button">x</button>\n  </div>\n  <div class="aside-body">\n    <ul class="categories">\n      <li>\n        <a href="/#/?q=shirt"\n          >Shirts\n          <span><i class="fa fa-chevron-right"></i></span>\n        </a>\n      </li>\n      <li>\n        <a href="/#/?q=pant"\n          >Pants\n          <span><i class="fa fa-chevron-right"></i></span>\n        </a>\n      </li> \n    </ul>\n  </div>',after_render:async()=>{document.getElementById("aside_container").classList.remove("open"),document.getElementById("aside-close-button").addEventListener("click",async()=>{document.getElementById("aside_container").classList.remove("open")})}};const _={after_render:()=>{document.getElementById("create-product-button").addEventListener("click",async()=>{const{data:e}=await(async()=>{const{token:e}=o(),n={method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}};try{const e=await fetch(i+"/api/products",n),t=await e.json();if(201!==e.status)throw new Error(t.message);return t}catch(e){return console.log("Error in create product",e.message),{error:e.message}}})();document.location.hash=`/product/${e._id}/edit`});const e=document.getElementsByClassName("delete-button");Array.from(e).forEach(e=>{e.addEventListener("click",async()=>{confirm("Are you sure to delete this product?")&&(y(),await(async e=>{const{token:n}=o(),t={method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n}};try{const n=await fetch(`${i}/api/products/${e}`,t),r=await n.json();if(200!==n.status)throw new Error(r.message);return r}catch(e){return console.log("Error in delete product",e.message),{error:e.message}}})(e.id),g(),f(_))})});const n=document.getElementsByClassName("edit-button");Array.from(n).forEach(e=>{e.addEventListener("click",()=>{document.location.hash=`/product/${e.id}/edit`})})},render:async()=>`\n    <div class="content">\n        <div class="product-header">\n          <h3>Products</h3>\n          <button id="create-product-button" class="primary">\n            Create Product\n          </button>\n        </div> \n\n        <div class="product-list">\n          <table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th>ACTION</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${(await u({})).map(e=>`\n                <tr>\n                  <td>${e._id}</td>\n                  <td>${e.name}</td>\n                  <td>${e.price}</td>\n                  <td>${e.category}</td>\n                  <td>${e.brand}</td>\n                  <td>\n                    <button id="${e._id}" class="edit-button">Edit</button> \n                    <button id="${e._id}" class="delete-button">Delete</button>\n                  </td>\n                </tr>`).join("\n")}\n            </tbody>\n          </table>\n        </div>\n      </div>`};const N={after_render:()=>{const e=document.getElementsByClassName("delete-button");Array.from(e).forEach(e=>{e.addEventListener("click",async()=>{confirm("Are you sure to delete this product?")&&(y(),await(async e=>{const{token:n}=o(),t={method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n}};try{const n=await fetch(`${i}/api/orders/${e}`,t),r=await n.json();if(200!==n.status)throw new Error(r.message);return r}catch(e){return console.log("Error in delete order",e.message),{error:e.message}}})(e.id),g(),f(N))})});const n=document.getElementsByClassName("edit-button");Array.from(n).forEach(e=>{e.addEventListener("click",()=>{document.location.hash="/order/"+e.id})})},render:async()=>`\n  <div class="content" >\n      <div class="order-header">\n        <h3>Orders</h3>\n      </div>\n      <div class="order-list">\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>USER</th>\n              <th>PAID</th>\n              <th>PAID AT</th>\n              <th>DELIVERED</th>\n              <th>DELIVERED AT</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${(await(async()=>{const{token:e}=o(),n={method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}};try{const e=await fetch(i+"/api/orders",n),t=await e.json();if(200!==e.status)throw new Error(t.message);return t}catch(e){return console.log("Error in get orders",e),{error:e.message}}})()).map(e=>`<tr key={order._id}>\n              <td>${e._id}</td>\n              <td>${e.createdAt}</td>\n              <td>${e.totalPrice}</td>\n              <td>${e.user.name}</td>\n              <td>${e.isPaid.toString()}</td>\n              <td>${e.paidAt}</td>\n              <td>${e.isDelivered.toString()}</td>\n              <td>${e.deliveredAt}</td>\n              <td> \n                <button type="button" class="edit-button" id="${e._id}">Edit</button>\n                <button type="button" class="delete-button" id="${e._id}">Delete</button>\n              </td>\n            </tr>`)}\n          </tbody>\n        </table>\n\n      </div>\n    </div>\n    `};const D={"/":{render:async()=>{const{value:e}=m(),n=await u({searchKeyword:e});if(n.error)return`<div class="message">${n.error}</div>`;if(!n.length)return'<div class="message">No product found.</div>';return`\n    <ul class="products">\n            ${n.map(e=>`<li key=${e._id}>\n                <div class="product">\n                  <a href="#/product/${e._id}">\n                    <img class="product-image" src="${e.image}" alt="${e.name}" />\n\n                  </a>\n                  <div class="product-name">\n                    <a href="#/product/${e._id}">${e.name}</a>\n                  </div>\n                  <div class="product-rating">\n                  ${w.render({value:e.rating,text:e.numReviews+" reviews"})}\n                  </div>\n                  <div class="product-brand">${e.brand}</div>\n                  <div class="product-price">$${e.price}</div>\n                  \n                </div>\n              </li>`).join("\n")}\n        </ul>\n        `},after_render:async()=>{}},"/about":{render:async()=>'\n            <section class="section">\n                <h1> About Me 1 </h1>\n            </section>\n        ',after_render:async()=>{}},"/signin":{after_render:()=>{v()?h():document.getElementById("signin-form").addEventListener("submit",async e=>{e.preventDefault(),y();const n=await(async({email:e,password:n})=>{const t={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:n})};try{const e=await fetch(i+"/api/users/signin",t),n=await e.json();if(200!==e.status)throw new Error(n.message);return n}catch(e){return console.log("Error in signin",e.message),{error:e.message}}})({email:document.getElementById("email").value,password:document.getElementById("password").value});g(),n.error?b(n.error):(s(n),h())})},render:()=>'\n  <div class="form">\n        <form id="signin-form"  >\n          <ul class="form-container">\n            <li>\n              <h2>Sign-In</h2>\n            </li>\n            <li>\n              <label for="email">Email</label>\n              <input\n                type="email"\n                name="email"\n                id="email" \n              />\n            </li>\n            <li>\n              <label for="password">Password</label>\n              <input\n                type="password"\n                id="password"\n                name="password" \n                autocomplete="on"\n              />\n            </li>\n            <li>\n              <button type="submit" class="primary">\n                Signin\n              </button>\n            </li>\n            <li>\n            <div>New User? \n            <a href="/#/register">Create your account</a>\n          <div>\n          </li>\n             \n          </ul>\n        </form>\n      </div>'},"/register":{after_render:()=>{v()?h():document.getElementById("register-form").addEventListener("submit",async e=>{e.preventDefault(),y();const n=await(async({name:e,email:n,password:t})=>{const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:n,password:t})};try{const e=await fetch(i+"/api/users/register",r),n=await e.json();if(201!==e.status)throw new Error(n.message);return n}catch(e){return console.log("Error in register",e.message),{error:e.message}}})({name:document.getElementById("name").value,email:document.getElementById("email").value,password:document.getElementById("password").value});g(),n.error?b(n.error):(s(n),h())})},render:()=>'\n      <div class="form">\n        <form id="register-form">\n          <ul class="form-container">\n            <li>\n              <h2>Create Account</h2>\n            </li> \n            <li>\n              <label for="name">Name</label>\n              <input\n                type="name"\n                name="name" \n                required\n                id="name" />\n            </li>\n            <li>\n              <label for="email">Email</label>\n              <input\n                type="email"\n                name="email"\n                id="email"   \n                required          \n                />\n            </li>\n            <li>\n              <label for="password">Password</label>\n              <input\n                type="password"\n                id="password"\n                name="password"\n                required        \n                autocomplete="on"\n                />\n            </li>\n            <li>\n              <label for="re-password">Re-Enter Password</label>\n              <input\n                type="password"\n                id="re-password"\n                name="re-password"\n                required            \n                autocomplete="on"\n                />\n            </li>\n            <li>\n              <button type="submit" class="primary">\n                Register\n              </button>\n            </li>\n            <li>\n              <div>Already have an account? <a href="/#/signin"> Sign-In </a>\n              </div>\n            </li>\n          </ul>\n        </form>\n      </div>'},"/profile":{after_render:()=>{document.getElementById("logout-button").addEventListener("click",()=>{localStorage.removeItem("userInfo"),localStorage.removeItem("cartItems"),localStorage.removeItem("shipping"),localStorage.removeItem("payment"),document.location.href="/"}),document.getElementById("profile-form").addEventListener("submit",async e=>{e.preventDefault(),y();const n=await(async({name:e,email:n,password:t})=>{const{_id:r,token:a}=o(),s={method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+a},body:JSON.stringify({name:e,email:n,password:t})};try{const e=await fetch(`${i}/api/users/${r}`,s),n=await e.json();if(200!==e.status)throw new Error(n.message);return n}catch(e){return console.log("Error in update user",e.message),{error:e.message}}})({email:document.getElementById("email").value,name:document.getElementById("name").value,password:document.getElementById("password").value});g(),n.error?b(n.error):(s(n),b("Profile Updated Successfully.",()=>{document.location.reload()}))})},render:async()=>{const{name:e,email:n}=o(),t=await(async()=>{const{token:e}=o(),n={method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}};try{const e=await fetch(i+"/api/orders/mine",n),t=await e.json();if(200!==e.status)throw new Error(t.message);return t}catch(e){return console.log("Error in get my orders",e),{error:e.message}}})();return`\n      <div class="profile">\n        <div class="profile-info">\n          <div class="form">\n            <form id="profile-form">\n              <ul class="form-container">\n                <li>\n                  <h2>User Profile</h2>\n                </li>\n                <li> \n            </li>\n                <li>\n                  <label for="name">Name</label>\n                  <input\n                    value="${e}"\n                    type="text"\n                    name="name"\n                    id="name"\n                    required />\n                </li>\n                <li>\n                  <label for="email">Email</label>\n                  <input\n                    value="${n}"\n                    type="email"\n                    name="email"\n                    required\n                    id="email" />\n                </li>\n                <li>\n                  <label for="password">Password</label>\n                  <input \n                    type="password"\n                    id="password"\n                    name="password" autocomplete="on" />\n                </li>\n\n                <li>\n                  <button type="submit" class="primary">\n                    Update\n                  </button>\n                </li>\n                <li>\n                  <button\n                    type="button"\n                    id="logout-button" \n                    class="fw"\n                  >\n                    Logout\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n        <div class="profile-orders">\n         \n          <table>\n            <thead>\n              <tr>\n                <th>ORDER ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th>ACTIONS</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${0===t.length?'<tr><td colspan="6">No Order Found</td></tr>':t.map(e=>`\n                <tr>\n                  <td>${e._id}</td>\n                  <td>${e.createdAt}</td>\n                  <td>${e.totalPrice}</td>\n                  <td>${e.isPaid}</td>\n                  <td>${e.isDelivered}</td>\n                  <td>\n                    <a href="/#/order/${e._id}">DETAILS</a>\n                  </td>\n                </tr>`).join("\n")}\n            </tbody>\n          </table>\n        </div>  \n     </div>`}},"/shipping":{after_render:()=>{document.getElementById("shipping-form").addEventListener("submit",e=>{e.preventDefault(),(({address:e="",city:n="",country:t="",postalCode:r=""})=>{localStorage.setItem("shipping",JSON.stringify({address:e,city:n,postalCode:r,country:t}))})({address:document.getElementById("address").value,city:document.getElementById("city").value,postalCode:document.getElementById("postal-code").value,country:document.getElementById("country").value}),document.location.hash="/payment"})},render:()=>{const{address:e,city:n,postalCode:t,country:r}=l();return`\n    <div>\n      ${x.render({step1:!0,step2:!0})}\n      <div class="form">\n        <form id="shipping-form">\n          <ul class="form-container">\n            <li>\n              <h2>Shipping</h2>\n            </li>\n            <li>\n              <label for="address">Address</label>\n              <input\n                type="text"\n                name="address"\n                id="address"\n                value="${e}"\n                required\n              />\n            </li>\n            <li>\n              <label for="city">City</label>\n              <input\n                type="text"\n                name="city"\n                id="city"\n                value="${n}"\n                required\n              />\n            </li>\n            <li>\n              <label for="postal-code">Postal Code</label>\n              <input\n                type="text"\n                name="postal-code"\n                id="postal-code"\n                value="${t}"\n                required\n              />\n            </li>\n            <li>\n              <label for="country">Country</label>\n              <input\n                type="text"\n                name="country"\n                id="country"\n                value="${r}"\n                required\n              />\n            </li>\n            <li>\n              <button type="submit" class="primary">\n                Continue\n              </button>\n            </li>\n          </ul>\n        </form>\n      </div>\n    </div>`}},"/payment":{after_render:()=>{document.getElementById("payment-form").addEventListener("submit",e=>{e.preventDefault();(({paymentMethod:e="paypal"})=>{localStorage.setItem("payment",JSON.stringify({paymentMethod:e}))})({paymentMethod:document.querySelector('input[name="payment-method"]:checked').value}),document.location.hash="/placeorder"})},render:()=>`\n      <div>\n      ${x.render({step1:!0,step2:!0,step3:!0})}\n        <div class="form">\n          <form id="payment-form">\n            <ul class="form-container">\n              <li>\n                <h2>Payment</h2>\n              </li>\n\n              <li>\n                <div>\n                  <input\n                    type="radio"\n                    name="payment-method"\n                    id="paypal"\n                    value="Paypal"\n                    checked\n                     />\n                  <label for="paypal">Paypal</label>\n                </div>\n              </li>\n              <li>\n              <div>\n                <input\n                  type="radio"\n                  name="payment-method"\n                  id="stripe"\n                  value="Stripe" \n                  disabled\n                   />\n                <label for="stripe">Stripe</label>\n              </div>\n            </li>\n\n              <li>\n                <button type="submit" class="primary">\n                  Continue\n                </button>\n              </li>\n            </ul>\n          </form>\n        </div>\n      </div>`},"/placeorder":{after_render:()=>{document.getElementById("placeorder-button").addEventListener("click",()=>{P()})},render:()=>{const{shipping:e,payment:n,orderItems:t,itemsPrice:r,shippingPrice:a,taxPrice:i,totalPrice:o}=C();return`\n      <div>\n      ${x.render({step1:!0,step2:!0,step3:!0,step4:!0})}\n      <div class="placeorder">\n          <div class="placeorder-info">\n            <div>\n              <h3>Shipping</h3>\n              <div>\n                ${e.address}, ${e.city},\n                ${e.postalCode}, ${e.country},\n              </div>\n            </div>\n            <div>\n              <h3>Payment</h3>\n              <div>Payment Method: ${n.paymentMethod}</div>\n            </div>\n            <div>\n              <ul class="cart-list-container">\n                <li>\n                  <h3>Shopping Cart</h3>\n                  <div>Price</div>\n                </li>\n                ${0===t.length?"<div>Cart is empty</div>":t.map(e=>`<li>\n                      <div class="cart-image">\n                        <img src="${e.image}" alt="${e.name}" />\n                      </div>\n                      <div class="cart-name">\n                        <div>\n                          <a href="/#/product/${e.product}">\n                            ${e.name}\n                          </a>\n                        </div>\n                        <div>Qty: ${e.qty}</div>\n                      </div>\n                      <div class="cart-price">$ ${e.price}</div>\n                    </li>`)}\n              </ul>\n            </div>\n          </div>\n          <div class="placeorder-action">\n            <ul>              \n              <li>\n                <h3>Order Summary</h3>\n              </li>\n              <li>\n                <div>Items</div>\n                <div>$${r}</div>\n              </li>\n              <li>\n                <div>Shipping</div>\n                <div>$${a}</div>\n              </li>\n              <li>\n                <div>Tax</div>\n                <div>$${i}</div>\n              </li>\n              <li class="total">\n                <div>Order Total</div>\n                <div>$${o}</div>\n              </li>\n              <li>\n                <button\n                  class="primary fw"\n                  id="placeorder-button"\n                >\n                  Place Order\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>`}},"/product/:id":S,"/product/:id/edit":{after_render:()=>{const e=m();document.getElementById("edit-product-form").addEventListener("submit",async n=>{n.preventDefault(),y();const t=await(async e=>{const{token:n}=o(),t={method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n},body:JSON.stringify(e)};try{const n=await fetch(`${i}/api/products/${e._id}`,t),r=await n.json();if(200!==n.status)throw new Error(r.message);return r}catch(e){return console.log("Error in update product",e.message),{error:e.message}}})({_id:e.id,name:document.getElementById("name").value,price:document.getElementById("price").value,image:document.getElementById("image").value,brand:document.getElementById("brand").value,category:document.getElementById("category").value,countInStock:document.getElementById("countInStock").value,description:document.getElementById("description").value});g(),t.error?b(t.error):document.location.hash="/productlist"}),document.getElementById("image-file").addEventListener("change",async e=>{const n=e.target.files[0],t=new FormData;t.append("image",n),y();const r=await(async e=>{const n={method:"POST",body:e};console.log(e);try{const e=await fetch(i+"/upload",n),t=await e.json();if(201!==e.status)throw new Error(t.message);return t}catch(e){return console.log("Error in create review",e.message),{error:e.message}}})(t);g(),r.error?b(r.error):(b("Image Uploaded Successfully."),document.getElementById("image").value=r.image)})},render:async()=>{const e=m(),{name:n,price:t,brand:r,description:a,image:i,countInStock:o,category:s}=await p(e.id);return`\n    <div class="back-to-result">\n    <a href="/#/productlist">Back to result</a>\n  </div>\n    <div class="form">\n            <form id="edit-product-form">\n              <ul class="form-container">\n                <li>\n                  <h2>Edit Product</h2>\n                </li> \n                <li>\n                  <label for="name">Name</label>\n                  <input\n                    type="text"\n                    name="name"\n                    value="${n}"\n                    id="name" \n                  />\n                </li>\n                <li>\n                  <label for="price">Price</label>\n                  <input\n                    type="text"\n                    name="price"\n                    value="${t}"\n                    id="price"\n                   />\n                </li>\n                <li>\n                  <label for="image">Image (680 x 830)</label>\n                  <input\n                    type="text"\n                    name="image"\n                    value="${i}"\n                    id="image"\n                    />\n                    <input\n                    type="file"\n                    name="image-file"\n                    id="image-file"\n                  />\n                </li>\n                <li>\n                  <label for="brand">Brand</label>\n                  <input\n                    type="text"\n                    name="brand"\n                    value="${r}"\n                    id="brand"\n                    />\n                </li>\n                <li>\n                  <label for="countInStock">CountInStock</label>\n                  <input\n                    type="text"\n                    name="countInStock"\n                    value="${o}"\n                    id="countInStock"\n                    />\n                </li>\n                <li>\n                  <label for="name">Category</label>\n                  <input\n                    type="text"\n                    name="category"\n                    value="${s}"\n                    id="category"\n                    ?>\n                </li>\n                <li>\n                  <label for="description">Description</label>\n                  <textarea\n                    name="description"\n                    id="description"\n                    >${a}</textarea>\n                    \n                </li>\n                <li>\n                  <button type="submit" class="primary">\n                    Update \n                  </button>\n                </li> \n              </ul>\n            </form>\n    </div>`}},"/productlist":_,"/orderlist":N,"/order/:id":O,"/cart/:id":$,"/cart":$},R=async()=>{y();const e=document.getElementById("header_container"),n=document.getElementById("aside_container"),t=document.getElementById("main_container"),r=document.getElementById("footer_container");e.innerHTML=await T.render(),await T.after_render(),n.innerHTML=await L.render(),await L.after_render(),r.innerHTML=await B.render(),await B.after_render();const a=m(),i=(a.resource?"/"+a.resource:"/")+(a.id?"/:id":"")+(a.verb?"/"+a.verb:""),o=D[i]?D[i]:I;t.innerHTML=await o.render(),await o.after_render(),g()};window.addEventListener("hashchange",R),window.addEventListener("load",R)}]);